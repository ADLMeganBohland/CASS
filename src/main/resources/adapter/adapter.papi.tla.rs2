process=#runProcess(
	workingDirectory="scripts/node",
	timeout="50000",
	args=#object(
		a="/usr/bin/node",
		b="tla/hasCompetency.js", 
		c=#add(a="competencyId=",b="@competencyId"), 
		d=#add(a="ppk=",b=#xapiMePpk().debug(prefix="ppk:")),
		e=#add(
			a="pk=",
			b=#object(
				mbox=#add(
					a="mailto:",
					b="@username"
				)
			).xapiAgentToPk().debug(prefix="pk:")
		),
		f=#add(
			a="frameworkId=",
			b="@frameworkId"
		),
		g=#add(
			a="endpoint=",
			b=#repoEndpoint()
		)
	).valueSet()
).debug();

processTest=process.displayJson();
/learners/test/determineCompetence = processTest;

process=#object(
	level=#if(operator=process.flatten(),operand="TRUE",eq=#toDouble(obj="2.0"),ne=#toDouble(obj="0.0")),
	confidence=#toDouble(obj="1.0")
).put(
	_key="measureType",_value="com.soartech.fluent.evidencemapper.mastery.FourStageMastery").put(
	_key="populationContext",_value="http://soartech.com/employees"
);

#determineCompetenceForOneCompetency=process;

processTest=process.displayJson();
/learners/rest/determineCompetence = processTest;

process=#runProcess(
	workingDirectory="scripts/node",
	timeout="500000",
	args=#object(
		a="/usr/bin/node",
		b="tla/getProfile.js", 
		d=#add(a="ppk=",b=#xapiMePpk()),
		e=#add(
			a="pk=",
			b=#object(
				mbox=#add(
					b="@username"
				)
			).xapiAgentToPk()
		),
		f=#add(
			a="frameworkId=",
			b="@frameworkId"
		),
		g=#add(
			a="endpoint=",
			b=#repoEndpoint()
		)
	).valueSet()
).flatten().toObject();

processTest=process.displayJson();
/learners/test/profile = processTest;

process=process.forEach(
	paramName="key",
	valueName="val",
	array="true",
	op=#object(
        a=#object(url="@key"),
        b=#object(
            level=#if(
                operator="@val",
                operand="TRUE",
                eq=#toDouble(obj="2.0"),
                ne=#toDouble(obj="0.0")
            ),
            confidence=#toDouble(obj="1.0")
        ).put(
            _key="measureType",_value="com.soartech.fluent.evidencemapper.mastery.FourStageMastery").put(
            _key="populationContext",_value="http://soartech.com/employees"
        )
    ).valueSet()
).displayJson(_collapse="true");

#determineCompetenceForAllCompetencies=process;

/learners/rest/profile = process;

process=#runProcess(
	workingDirectory="scripts/node",
	timeout="50000",
	args=#object(
		a="/usr/bin/node",
		b="tla/addAssertion.js",		
		c=#add(a="competencyId=",b="@competencyId"), 
		cc=#add(a="owner=",b=#xapiMePpk().replace(replace="\r?\n", with="")),
		d=#add(a="agent=",b=#xapiMePpk().rsaPpkToPk().replace(replace="\r?\n", with="")),
		e=#add(
			a="subject=",
			b=#object(
				mbox=#add(
					b="@username"
				)
			).xapiAgentToPk().replace(replace="\r?\n", with="")
		),
		g=#add(
			a="endpoint=",
			b=#repoEndpoint()
		),
		h=#add(
			a="confidence=",
			b="@confidence"
		)
	).valueSet()
);

#createAssertionForCompetency=process;

processTest=process.displayJson();
/learners/test/addAssertion = processTest;

process=#runProcess(
	workingDirectory="scripts/node",
	timeout="50000",
	args=#object(
		a="/usr/bin/node",
		b="tla/deleteAssertion.js",		
		c=#add(a="competencyId=",b="@competencyId"), 
		cc=#add(a="owner=",b=#xapiMePpk().replace(replace="\r?\n", with="")),
		d=#add(a="agent=",b=#xapiMePpk().rsaPpkToPk().replace(replace="\r?\n", with="")),
		e=#add(
			a="subject=",
			b=#object(
				mbox=#add(
					b="@username"
				)
			).xapiAgentToPk().replace(replace="\r?\n", with="")
		),
		g=#add(
			a="endpoint=",
			b=#repoEndpoint()
		),
		h=#add(
			a="confidence=",
			b="@confidence"
		)
	).valueSet()
);

#deleteAssertionsForOneCompetency=process;

processTest=process.displayJson();
/learners/test/deleteAssertion = processTest;

process=#runProcess(
	workingDirectory="scripts/node",
	timeout="50000",
	args=#object(
		a="/usr/bin/node",
		b="tla/deleteAllAssertion.js",		
		c=#add(a="competencyId=",b="@competencyId"), 
		cc=#add(a="owner=",b=#xapiMePpk().replace(replace="\r?\n", with="")),
		d=#add(a="agent=",b=#xapiMePpk().rsaPpkToPk().replace(replace="\r?\n", with="")),
		e=#add(
			a="subject=",
			b=#object(
				mbox=#add(
					b="@username"
				)
			).xapiAgentToPk().replace(replace="\r?\n", with="")
		),
		g=#add(
			a="endpoint=",
			b=#repoEndpoint()
		),
		h=#add(
			a="confidence=",
			b="@confidence"
		)
	).valueSet()
);

#deleteAssertionsForAllCompetencies=process;

processTest=process.displayJson();
/learners/test/deleteAllAssertion = processTest;

process=#runProcess(
	workingDirectory="scripts/node",
	timeout="50000",
	args=#object(
		a="/usr/bin/node",
		b="tla/listGoals.js",		
		e=#add(
			a="email=",
			b="@username"
		),
		g=#add(
			a="endpoint=",
			b=#repoEndpoint()
		)
	).valueSet()
).removeDuplicates();

process=process.forEach(
	paramName="key",
	valueName="val",
    array="true",
	op=#object(
        priority=#toDouble(obj="@i"),
        competency=#object(url="@key"),
        masteryThreshold=#object(
            level=#toDouble(obj="2.0"),
            confidence=#toDouble(obj="0.5")
        ).put(
            _key="measureType",_value="com.soartech.fluent.evidencemapper.mastery.FourStageMastery").put(
            _key="populationContext",_value="http://soartech.com/employees"
        )
    )    
).displayJson(_collapse="true");

#goalsForAllCompetencies=process;

processTest=process.displayJson();
/learners/test/allGoals = processTest;

process=#runProcess(
	workingDirectory="scripts/node",
	timeout="50000",
	args=#object(
		a="/usr/bin/node",
		b="tla/addGoal.js",	
		c=#add(a="competencyId=",b="@competencyId"), 	
		e=#add(
			b="@username"
		),
		g=#add(
			a="endpoint=",
			b=#repoEndpoint()
		)
	).valueSet()
);

#setGoalForOneCompetency=process;

processTest=process.displayJson();
/learners/test/setGoal = processTest;

process=#runProcess(
	workingDirectory="scripts/node",
	timeout="50000",
	args=#object(
		a="/usr/bin/node",
		b="tla/deleteGoal.js",	
		c=#add(a="competencyId=",b="@competencyId"), 	
		e=#add(
			b="@username"
		),
		g=#add(
			a="endpoint=",
			b=#repoEndpoint()
		)
	).valueSet()
);

#deleteGoalForOneCompetency=process;

processTest=process.displayJson();
/learners/test/deleteGoal = processTest;

process=#runProcess(
	workingDirectory="scripts/node",
	timeout="50000",
	args=#object(
		a="/usr/bin/node",
		b="tla/deleteGoals.js",	
		c=#add(a="competencyId=",b="@competencyId"), 	
		e=#add(
			b="@username"
		),
		g=#add(
			a="endpoint=",
			b=#repoEndpoint()
		)
	).valueSet()
);

#deleteGoalsForAllCompetencies=process;

processTest=process.displayJson();
/learners/test/deleteGoals = processTest;

importFramework=#runProcess(
	workingDirectory="scripts/node",
	timeout="500000",
	args=#object(
		a="/usr/bin/node",
		b="tla/importFramework.js", 
		d=#add(a="owner=",b=#xapiMePpk()),
		e=#add(
			a="endpoint=",
			b=#if(operator="@endpoint",operand="",eq=#repoEndpoint(),ne="@endpoint")
		),
		f="frameworkGuid=5c0b7012-b2fd-431e-aab2-ee3feb323085",
		g="frameworkName=TLA Cybersecurity Framework (Nov 1)",
		h=#add(
			a="competencyPath=",
			b="@competencyPath"
		),
		i=#add(
			a="relationPath=",
			b="@relationPath"
		)
	).valueSet()
).debug().displayJson();
/tla/import=importFramework;