
context=#add(a="@",b="context");
id=#add(a="@",b="id");
type=#add(a="@",b="type");
language=#add(a="@",b="language");
vocab=#add(a="@",b="vocab");

asnContext = #object(
	asn="http://purl.org/ASN/schema/core/",
	cc="http://creativecommons.org/ns#",
	dc="http://purl.org/dc/elements/1.1/",
	dcterms="http://purl.org/dc/terms/",
	foaf="http://xmlns.com/foaf/0.1/",
	gemq="http://purl.org/gem/qualifiers/",
	loc="http://www.loc.gov/loc.terms/relators/",
	owl="http://www.w3.org/2002/07/owl#",
	rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#",
	rdfs="http://www.w3.org/2000/01/rdf-schema#",
	skos="http://www.w3.org/2004/02/skos/core#"
).put(
	_key=vocab,
	_value="http://schema.cassproject.org/0.2/"
);
#asnContext=asnContext;

cassToAsnFrameworkContext = asnContext.put(
	name=#object().put(
		_key=id,
		_value="dc:title"
	).put(
		_key=language,
		_value="en-US"
	),
	description=#object().put(
		_key=id,
		_value="dcterms:description"
	),
	Framework="http://purl.org/ASN/schema/core/StandardDocument",
);

cassToAsnCompetencyContext = asnContext.put(
	name="test"
);


getRelation=#getRelationById(id="@relationId");

checkTopLevelCompetencies=#toArray(obj="@competencyIds").forEach(
	op=#if(operator=#toObject(obj="@relationsBySource").getByParam(param="@competencyId"),
		operand="",
		eq=#object().put(
			_key=id,
			_value="@competencyId"
		),
		ne="false"
	),
	paramName="competencyId",
	array="true"
).removeFromArray(
	item="false"
);

getTopLevelCompetencies = checkTopLevelCompetencies.call(
	relationsBySource=#toObject(obj="@relations").forEach(
		op=#if(operator=#toObject(obj="@relation").get(relationType=""), operand="narrows",
			eq=#toObject(obj="@relation").get(source=""),
			ne="false"
		),
		paramName="relationId",
		valueName="relation"
	).pivot().removeByParam(param="false"),
	relationsByTarget=#toObject(obj="@relations").forEach(
		op=#if(operator=#toObject(obj="@relation").get(relationType=""), operand="narrows",
			eq=#toObject(obj="@relation").get(target=""),
			ne="false"
		),
		paramName="relationId",
		valueName="relation"
	).pivot().removeByParam(param="false")
).call(
	relations=#toArray(obj="@relationIds").forEach(
		op=getRelation,
		paramName="relationId",
	),
);


cassToAsnFramework = #object(
	a=#toObject(obj="@framework").put(
			_key="gemq:hasChild",
			_value=#toArray(obj="@topLevelCompetencies")
		).jsonLdToRdfXml()
).call(
	framework=#toObject(obj="@framework").removeByParam(param="competency"),
	topLevelCompetencies=getTopLevelCompetencies.call(
		competencyIds=#toObject(obj="@framework").get(competency="")
	)
).call(
	framework=#toObject(obj="@framework").removeByParam(param="relation"),
	relationIds=#toObject(obj="@framework").get(relation="")
).cget(
	a=""
);


convertCassToAsn = cassToAsnFramework.call(
	framework=#skyrepoGet(id="@frameworkId").put(
		_key=context,
		_value=cassToAsnFrameworkContext
	)
).displayJson(_collapse="true");

/cass/to/asn=convertCassToAsn;
