//-----FRAMEWORK UPDATING-----

frameworkGuid=#toArray(obj="@frameworkId").getIndex(index=#toArray(obj="@frameworkId").count().add(z="-2"));
frameworkLastModified=#toArray(obj="@frameworkId").getIndex(index=#toArray(obj="@frameworkId").count().add(z="-1")).toLong();
moodleFrameworkId=#toObject(obj="@moodleFramework").get(idnumber="");
moodleFrameworkLastModified=#toObject(obj="@moodleFramework").get(timemodified="").multiply(b="1000").toLong();

framework=#toArray(obj="@frameworks").forEach(
	array="true",
	threaded="false",
	paramName="framework",
	op=#if(
		operator=#toObject(obj="@moodleFramework").get(idnumber=""),
		operand=frameworkGuid,
		eq=#toObject(obj="@framework")
	).call(frameworkId=#toObject(obj="@framework").getByParam(param=#id()).split(split="/"))
).getIndex(index="0");

addFramework=#cassCreateCompetencyFramework(
	id=moodleFrameworkId,
	name=#toObject(obj="@moodleFramework").get(shortname=""),
	description=#toObject(obj="@moodleFramework").get(description=""),
	lastModified=moodleFrameworkLastModified,
	ppk=#moodlePpk()
);

updateFramework=#cassUpdateCompetencyFramework(
	id=moodleFrameworkId,
	name=#toObject(obj="@moodleFramework").get(shortname=""),
	description=#toObject(obj="@moodleFramework").get(description=""),
	lastModified=moodleFrameworkLastModified,
	ppk=#moodlePpk()
);

checkDateFramework=#if(
	operator=moodleFrameworkLastModified,
	operand=frameworkLastModified,
	gt=updateFramework
);

checkFramework=#if(
	operator=#toObject(obj="@framework"),
	operand="",
	eq=addFramework,
	ne=checkDateFramework
);

moodleToCassFrameworks=#moodleListCompetencyFrameworks().forEach(
	array="true",
	paramName="moodleFramework",
	op=checkFramework.call(frameworkId=#toObject(obj="@framework").getByParam(param=#id()).split(split="/")).call(framework=framework)
).call(frameworks=#getFrameworks());

//-----COMPETENCY UPDATING-----

competencyGuid=#toArray(obj="@competencyId").getIndex(index=#toArray(obj="@competencyId").count().add(z="-2"));
competencyLastModified=#toArray(obj="@competencyId").getIndex(index=#toArray(obj="@competencyId").count().add(z="-1")).toLong();
moodleCompetencyId=#toObject(obj="@moodleCompetency").get(idnumber="");
moodleCompetencyLastModified=#toObject(obj="@moodleCompetency").get(timemodified="").multiply(b="1000").toLong();

competency=#toObject(obj="@competenciesByGuid").getByParam(param=#toObject(obj="@moodleCompetency").get(idnumber=""));

addCompetency=#object(
	a=#cassCreateCompetency(
		id=moodleCompetencyId,
		name=#toObject(obj="@moodleCompetency").get(shortname=""),
		description=#toObject(obj="@moodleCompetency").get(description=""),
		lastModified=#divide(numerator=moodleCompetencyLastModified,denominator="1000").toLong(),
		ppk=#moodlePpk()
	),
	b=#cassAddCompetencyToFramework(
		frameworkId=moodleFrameworkId,
		competencyId=moodleCompetencyId,
		id=moodleFrameworkId,
		ppk=#moodlePpk()
	)
).cache(name="moodleToCassAddCompetencyLock",justLock="true");

updateCompetency=#cassUpdateCompetency(
	id=moodleCompetencyId,
	name=#toObject(obj="@moodleCompetency").get(shortname=""),
	description=#toObject(obj="@moodleCompetency").get(description=""),
	lastModified=#divide(numerator=moodleCompetencyLastModified,denominator="1000").toLong()
).cache(name="moodleToCassAddCompetencyLock",justLock="true");

checkDateCompetency=#if(
	operator=moodleCompetencyLastModified,
	operand=competencyLastModified,
	gt=updateCompetency
);

checkCompetency=#if(
	operator=#toObject(obj="@competency"),
	operand="",
	eq=addCompetency.call(
		competencyId=#toObject(obj="@competency").getByParam(param=#id()).split(split="/")
	),
	ne=checkDateCompetency.call(
		competencyId=#toObject(obj="@competency").getByParam(param=#id()).split(split="/")
	)
);

checkCompetencies=#moodleListCompetencies().forEach(
	paramName="moodleCompetency",
	threaded="false",
	array="true",
	op=checkCompetency.call(
		competency=competency
	)
).call(
	competenciesByGuid=#toObject(obj="@framework").get(competency="").forEach(
		paramName="competency",
		array="true",
		op=#toObject(obj="@competency").put(
			guid=#toArray(obj="@competencyId").getIndex(index=#toArray(obj="@competencyId").count().add(z="-2"))
		).call(
			competencyId=#toObject(obj="@competency").getByParam(param=#id()).split(split="/")
		).call(
			competency=#getCompetencyById(id="@competency")
		)
	).collapse(keyKey="guid",accumulate="false").debug(prefix="competenciesByGuid:")
).call(
	competencyframeworkid=#toObject(obj="@moodleFramework").get(id="")
);

moodleToCassCompetencies=#moodleListCompetencyFrameworks().forEach(
	array="true",
	paramName="moodleFramework",
	op=checkCompetencies.call(framework=framework)
).call(frameworks=#getFrameworks());

//-----RELATION UPDATING-----

competencyGuidFromShortId=#toArray(obj="@competencyId").getIndex(index=#toArray(obj="@competencyId").count().add(z="-1"));
moodleCompetencyFromShortId=#toArray(obj="@moodleCompetenciesByShortId").getByParam(param=competencyGuidFromShortId);

relationNarrows=#toObject(obj="@relation");

checkRelationNarrows=#if(
	operator=#toObject(obj="@moodleCompetencySource").get(parentid=""),
	operand=#toObject(obj="@moodleCompetencyTarget").get(id=""),
	ne=relationNarrows
);

checkRelation=#if(
	operator=#toObject(obj="@relation").get(relationType=""),
	operand="narrows",
	eq=checkRelationNarrows
);

createRelation=#object(
	a=#cassCreateRelation(
		id="@relationId",
		source=moodleCompetencyId,
		target=moodleCompetencyId.call(moodleCompetency=#toObject(obj="@targetCompetency")),
		relationType="narrows",
		ppk=#moodlePpk()
	),
	b=#cassAddRelationToFramework(
		frameworkId=moodleFrameworkId,
		relationId="@relationId",
		id=moodleFrameworkId,
		ppk=#moodlePpk()
	)
).call(relationId=#generateUUID()).cache(name="moodleToCassAddRelationLock",justLock="true");

checkMoodleRelation=#if(
	operator=#toObject(obj="@relationsByGuid").getByParam(param=#toObject(obj="@moodleCompetency").get(idnumber="")),
	operand="",
	eq=createRelation
);

checkMoodleRelation=#if(
	operator=#toObject(obj="@moodleCompetency").get(parentid=""),
	operand="0",
	ne=checkMoodleRelation.call(
		targetCompetency=#toObject(obj="@moodleCompetenciesById").getByParam(param=#toObject(obj="@moodleCompetency").get(parentid=""))
	),
	eq=#string(str="No Parent.")
);

checkMoodleRelations=#toArray(obj="@moodleCompetencies").forEach(
	paramName="moodleCompetency",
	threaded="false",
	array="true",
	op=checkMoodleRelation
).call(
	moodleCompetenciesById=#toArray(obj="@moodleCompetencies").collapse(keyKey="id",accumulate="false")
).call(
	moodleCompetencies=#moodleListCompetencies()
);

checkMoodleRelations=checkMoodleRelations.call(
	relationsByGuid=#toObject(obj="@framework").get(relation="").forEach(
		paramName="relation",
		array="true",
		threaded="false",
		op=#if(
			operator=#toObject(obj="@relation").get(relationType=""),
			operand="narrows",
			eq=#toObject(obj="@relation").put(
				competencySourceGuid=#toArray(obj="@competencySource").getIndex(index=#toArray(obj="@competencySource").count().add(z="-1"))
			).call(
				competencySource=#toObject(obj="@relation").get(source="").split(split="/"),
				competencyTarget=#toObject(obj="@relation").get(target="").split(split="/")
			)
		).call(
			relation=#getRelationById(id="@relation")
		)
	).collapse(keyKey="competencySourceGuid",accumulate="false")
).call(
	competencyframeworkid=#toObject(obj="@moodleFramework").get(id="")
);

moodleToCassRelations=#moodleListCompetencyFrameworks().forEach(
	array="true",
	paramName="moodleFramework",
	op=checkMoodleRelations.call(
		frameworkId=#toObject(obj="@framework").getByParam(param=#id()).split(split="/")
	).call(
		framework=framework
	)
).call(frameworks=#getFrameworks());

//-----CONTROL FUNCTIONS-----

moodleToCass=#object(
	a=moodleToCassFrameworks,
	b=moodleToCassCompetencies,
	c=moodleToCassRelations
);
moodleToCassDebug=moodleToCass.displayJson(_collapse="true");

moodleToCassIf=#if(
	operator=#moodleAdapterEnabled(),
	operand="true",
	eq=moodleToCass
);

#moodleToCass=moodleToCassIf;

/moodle/moodleToCass=moodleToCassDebug;