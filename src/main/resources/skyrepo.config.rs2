urlBase=#add(
	a="http://localhost:9200"
);
#urlBase=urlBase;

amqpConfigPath=#string(obj="adapter.amqp.json");
amqpConfiguration=#object(
	enabled="false",
	hostname="localhost",
	port="-1",
	exchange="skyrepo",
	exchangeType="direct",
	queue="",
	durable="true",
	exclusive="false",
	autoDelete="true"
);
amqpConfiguration=#if(
	operator=#fileExists(path=amqpConfigPath),
	operand="false",
	eq=amqpConfiguration.toString().fileSave(path=amqpConfigPath).toObject(),
	ne=#fileLoad(path=amqpConfigPath).fileToString().toObject()
).catch(null=amqpConfiguration,runtime=amqpConfiguration,any=amqpConfiguration).cache(name="amqpConfiguration");
#amqpConfiguration=amqpConfiguration;

indexBase=#add(a="data");
#indexBase=indexBase;

// Interval between adapter runs between get requests (in seconds)
beforeGetInterval=#string(str="1800");

// Interval between adapter runs after saving (in seconds)
afterSaveInterval=#string(str="900");

afterSave=#if(
	operator=#variableGet(key="afterSave"),
	operand=#date(raw="true").add(a=#add(a="-", b=#multiply(a="1000", b=beforeGetInterval))),
	lt=#object(
		a=#cassToMoodle(),
		b=#variableSet(key="afterSave",obj=#date(raw="true"))
	)
).cache(name="afterSave",justLock="true");

afterSave=#if(
	operator=#object(a="127.0.0.1",b="localhost").valueSet().has(has="@ip"),
	operand="false",
	eq=afterSave.ccall(background="true")
);

afterSave=#if(
	operator="@noExternal",
	operand="true",
	ne=afterSave
);

postData=#fileFromDatastream(name="data");
postObject=postData.fileToString().toObject();
afterSave=#object(
	a=afterSave,
	z=#wsBroadcast(obj=postObject.getByParam(param=#id())),
	zz=#if(
		operator=amqpConfiguration.get(enabled=""),
		operand="true",
		eq=#amqpSend(
			obj=postObject.getByParam(param=#id()),
			hostName=amqpConfiguration.get(hostname=""),
			port=amqpConfiguration.get(port=""),
			exchangeName=amqpConfiguration.get(exchange=""),
			exchangeType=amqpConfiguration.get(exchangeType=""),
			routingKey=postObject.getByParam(param=#type()),
			queue=amqpConfiguration.get(queue=""),
			durable=amqpConfiguration.get(durable=""),
			exclusive=amqpConfiguration.get(exclusive=""),
			autoDelete=amqpConfiguration.get(autoDelete="")
		)
	),
	c=#if(operator=postObject.getByParam(param=#type()),operand="Assertion",eq=postObject.openbadgeCheckId())
);

#afterSave=afterSave;

beforeGet=#if(
	operator=#variableGet(key="beforeGet"),
	operand=#date(raw="true").add(a=#add(a="-", b=#multiply(a="1000", b=afterSaveInterval))),
	lt=#object(,
		a=#variableSet(key="beforeGet",obj=#date(raw="true")),
		aa=#xapiTick(),
		b=#moodleToCass(),
		c=#variableSet(key="beforeGet",obj=#date(raw="true"))
	)
).cache(name="beforeGet",justLock="true");

beforeGet=#if(
	operator=#object(a="127.0.0.1",b="localhost").valueSet().has(has="@ip"),
	operand="false",
	eq=beforeGet.ccall(background="true")
);

beforeGet=#if(
	operator="@noExternal",
	operand="true",
	ne=beforeGet
);

#beforeGet=beforeGet;