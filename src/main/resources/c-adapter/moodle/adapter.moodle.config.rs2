
configFilePath=#string(str="etc/adapter.moodle.json");

postData=#fileFromDatastream(name="config");
postObject=postData.fileToString().toObject();

configObject=#object(
	moodleEndpoint="",
	moodleToken="",
	enabled=#false()
);
configObject=#if(
	operator=#fileExists(path=configFilePath),
	operand="true",
	eq=#fileLoad(path=configFilePath).fileToString().toObject(),
	ne=configObject.toString().fileSave(path=configFilePath).toObject()
).catch(any=configObject);

configVal=configObject.getByParam(param="@key");
#moodleConfigVal=configVal;


isSkyAdmin=#if(operator=#signatureSheet().intersect(a=#append(a=#skyrepoAdminPpk().rsaPpkToPk().replace(replace="\r?\n", with=""))).count(),
	operand="0",
	gt=#true(),
	eq=#false()
);

configSet=postObject.displayJson(_collapse="true").fileSave(path=configFilePath);
checkConfigSet=#if(operator=isSkyAdmin, operand=#true(),
	eq=configSet,
	ne=#error(code="403", msg="Only those with the admin key can modify the adapter configuration")
);
/adapter/moodle/config/set=configSet;


configGet = configObject.displayJson(_collapse="true");
checkConfigGet=#if(operator=isSkyAdmin, operand=#true(),
	eq=configGet,
	ne=#error(code="403", msg="Only those with the admin key can view the adapter configuration")
);
/adapter/moodle/config/get=configGet;

token=#moodleConfigVal(key="moodleToken");
#moodleWsToken=token;

endpoint=#add(
	a=#if(operator=#indexOf(str="@endpointStart", substr="http"), operand="0",
			ne="http://",
			eq=""
		),
	b="@endpointStart",
	c="/webservice/rest/server.php"
).call(
	endpointStart = #moodleConfigVal(key="moodleEndpoint")
);
#moodleEndpoint=endpoint;


enabled=#moodleConfigVal(key="enabled");
enabled=#if(operator=enabled,operand="true",eq="true",ne="false");
#moodleAdapterEnabled=enabled;

cassToMoodleEnabled=#moodleConfigVal(key="cassToMoodleEnabled");
cassToMoodleEnabled=#if(operator=cassToMoodleEnabled,operand="true",eq="true",ne="false");
#moodleAdapterCassToMoodleEnabled=cassToMoodleEnabled;

moodleToCassEnabled=#moodleConfigVal(key="moodleToCassEnabled");
moodleToCassEnabled=#if(operator=moodleToCassEnabled,operand="true",eq="true",ne="false");
#moodleAdapterMoodleToCassEnabled=moodleToCassEnabled;



baseContext=#string(str="1");
#moodleBaseContext=baseContext;

scaleConfiguration=#object(
	a=#object(scaleid="2"),
	b=#object(id=#toInteger(obj="1"),scaledefault=#toInteger(obj="1"),proficient=#toInteger(obj="0")),
	c=#object(id=#toInteger(obj="2"),scaledefault=#toInteger(obj="0"),proficient=#toInteger(obj="1"))
).valueSet().toString();
#moodleFrameworkDefaultScaleConfiguration=scaleConfiguration;

scaleId=#string(str="2");
#moodleFrameworkDefaultScaleId=scaleId;




ppk=#fileLoad(path="adapter.moodle.private.pem").fileToString();
ppk=#if(
	operator=#fileExists(path="adapter.moodle.private.pem"),
	operand="false",
	eq=#object(
		a=#fileSave(obj=#rsaGenerate(),path="adapter.moodle.private.pem"),
		b=ppk
	).cget(b=""),
	ne=ppk
).cache(name="adapter.moodle.private.pem");
#moodlePpk=ppk;

key = #moodlePpk().rsaPpkToPk().replace(replace="\r?\n", with="").displayJson(_collapse="true");
/adapter/moodle/config/key = key;